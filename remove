#!/bin/bash

if [ "$(id -u)" -ne 0 ]; then
  echo "This script must be run as root. Enter your password...";
  sudo sh ./$0;
  exit 1;
fi

usrnm=$(logname)

DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
cd $DIR || { echo "Error, exiting..."; exit; }

if [ -f /bin/systemctl ]; then
	echo -e "\n\033[0;33mDisabling dynamicwall systemd daemons...\033[0m"
  systemctl stop dynamicwall.timer
  systemctl disable dynamicwall.service dynamicwall.timer
  echo ""
fi

if crontab -u $usrnm -l | grep "/home/$usrnm/bin/dynamic-wall/dynamicwall"; then
  echo -e "\033[0;33mRemoving cronjob...\033[0m"
  crontab -u $usrnm -l | grep -v "/home/$usrnm/bin/dynamic-wall/dynamicwall"  | crontab -u $usrnm -
fi

echo -e "\033[0;33mRemoving software links...\033[0m"
rm -f /usr/local/bin/dynamicwall

if [ -f /bin/systemctl ]; then
	echo -e "\n\033[0;33mRemoving dynamicwall.timer.d dropin...\033[0m"
  rm -f /etc/systemd/system/dynamicwall.timer.d
  echo ""
fi

echo -e "\033[0;33mRemoving software files and directories...\033[0m"

function remove_file(){

  if [ -f $1 ]; then
    rm -f $1
    echo "removed file: $1"
  fi
}

function remove_dir(){
if [[ "$2" = "ifempty" ]]; then
  if [ -d $1 ]; then
    rm -d $1
    echo "removed empty directory: $1"
  fi
else
  if [ -d $1 ]; then
    rm -rf $1
    echo "removed directory: $1"
  fi
fi
}

remove_file "/lib/systemd/system-sleep/dynamicwall.sh"
remove_file "/usr/lib/systemd/system-sleep/dynamicwall.sh"

remove_file "/home/$usrnm/.config/systemd/user/dynamicwall.timer"
remove_file "/home/$usrnm/.config/systemd/user/dynamicwall.service"
remove_file "/home/$usrnm/.config/systemd/user/dynamicwall.timer.d/2-timer.conf"

remove_dir "/home/$usrnm/.config/systemd/user/dynamicwall.timer.d"
remove_dir "/home/$usrnm/.config/systemd/user" "ifempty"
remove_dir "/home/$usrnm/.config/systemd" "ifempty"

remove_dir "/home/$usrnm/bin/dynamic-wall"
remove_dir "/home/$usrnm/bin/" "ifempty"


if [ "$1" != "-s" ]; then
	echo -e "\e[00;32mDynamic-Wall has been removed.\e[00m"
fi
