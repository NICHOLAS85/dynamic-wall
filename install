#!/bin/bash

if [[ $EUID = 0 ]]; then
   echo "This script must be run without root"
   exit 1
fi

DW_VERSION="2019.9.1"

trap 'echo "Stopped, Removing any half installed files...";./remove -s;exit 0' SIGINT

usrnm=$(logname)
update=false
for arg in "$@"
do
	case $arg in
		"--cron" )
			method="cron"
			shift
			;;
		"--update" )
			update=true
			shift
			;;
		"--install-dir" )
			if ! [ -d "$2" ]; then
				echo "$2 does not exists, do you want to create it? \n[y/n]:"
				read key
    	 	if [ "$key" = "y" ]; then
		 		mkdir -p -v $2 || { echo "Error creating directory, exiting..." ; exit 1; }
				echo "made $2"
				else
					exit 0
				fi
			fi
			install_dir="$(realpath $2)"
      install_dir_command="--install-dir $install_dir"
			shift 2
			;;
	esac
done

if ! [[ -f /bin/systemctl ]] && ! [[ $method = "cron" ]]; then
	echo -e "\e[00;31mWarning: systemd seems to be missing. Dynamic-Wall will not work. Run this setup with the --cron argument if you wish to use cron instead of systemd.\e[00m"
  exit 1
elif [[ -z $DBUS_SESSION_BUS_ADDRESS ]];then
  echo "Your \$DBUS_SESSION_BUS_ADDRESS is unset, restart your terminal to fix."
  exit 1
fi

if $update; then
  git reset --hard
  git clean -fdx
  git pull
  echo
  bash ./$0 "--$method" $install_dir_command;
  exit 0;
fi

# Set the scripts permisions

echo -e "\e[00;32m[1/6] Setting Permissions...\e[00m"
DIR=$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )
cd "$DIR" || { echo "Error, exiting..."; exit 1; }
chmod -v a+x ./remove
chmod -v +x ./update
chmod -v a+x ./lib/systemd/system-sleep/dynamicwall.sh
chmod -v +x ./dynamic-wall/dynamicwall
echo

# Remove previous versions

echo -e "\e[00;32m[2/6] Removing previous versions...\e[00m"
./remove -s

# Update username dependent fields

echo -e "\e[00;32m[3/6] Updating fields based on system and arguments...\e[00m"

sed -i "s/scheduler=.*/scheduler=${method:-systemd}/g" "$DIR/dynamic-wall/dynamicwall"
echo "Updated scheduler to ${method:-systemd}"

if [[ -n $install_dir ]]; then
 sed -i "s#install_dir=.*#install_dir=\"$install_dir\"#g" "$DIR/dynamic-wall/dynamicwall"
 echo "Updated installation directory to $install_dir/dynamic-wall"
 sed -i "s#theme_dir=.*#theme_dir=\"$install_dir/dynamic-wall/themes\"#g" "$DIR/dynamic-wall/dynamicwall.config"
 sed -i "s#theme_dir=.*#theme_dir=\"$install_dir/dynamic-wall/themes\"#g" "$DIR/dynamic-wall/default.config"
 echo "Updated theme_dir to $install_dir/dynamic-wall/themes"
else
	install_dir="/home/$usrnm/bin"
fi

# Start the installation

echo -e "\e[00;32m\n[4/6] Copying software files...\e[00m"
function install_files(){
  echo "installing: $1 into $2$1"
	{
	  install -o "$usrnm" -g "$usrnm" -d $2$1 && echo "installing: $1 into $1$2"
		if [[ $3 = "executable" ]]; then
			install -o "$usrnm" -g "$usrnm" -D "$DIR"/$1/* $2$1 && echo "installing: $1 into $1$2"
		else
			install -m 644 -o "$usrnm" -g "$usrnm" -D "$DIR"/$1/* $2$1 && echo "installing: $1 into $1$2"
		fi
	} &> /dev/null
}

install_files "dynamic-wall" "$install_dir/" executable
install_files "dynamic-wall/.oldvar" "$install_dir/"
install_files "dynamic-wall/themes" "$install_dir/"
install_files "dynamic-wall/themes/EarthView" "$install_dir/"
install_files "dynamic-wall/themes/mojave_dynamic" "$install_dir/"
install_files "dynamic-wall/themes/NewOrleans" "$install_dir/"

if [[ $method = "cron" ]]; then
  echo -e "\e[00;32m\nSkipping systemd files due to --cron installation...\e[00m"
else
  echo -e "\e[00;32m\nInstalling systemd units...\e[00m"
  install_files "config/systemd/user" "/home/$usrnm/."
  install_files "config/systemd/user/dynamicwall.timer.d" "/home/$usrnm/."
fi

if [[ $method = "cron" ]] && [[ -d /lib/systemd || -d /usr/lib/systemd ]]; then
  while true; do
    echo -e "\n\033[0;33mWould you like to install a system-sleep script to trigger dynamicwall on wakeup?\033[0m"
    echo -n "[y/n/?]:"
    read answer
    case $answer in
      y | Y )
        if  [[ -d /lib/systemd ]]; then
          install_files "lib/systemd/system-sleep" "/" executable
        elif [[ -d /usr/lib/systemd ]]; then
          install_files "lib/systemd/system-sleep" "/usr/" executable
        else
          echo -e "\e[00;31mCan't find system-sleep directory, skipping...\e[00m"
        fi
        break
        ;;
      n | N )
        echo -e "\e[00;32m\nSkipping system-sleep files...\e[00m"
        break
        ;;
      \? )
        echo "Dynamic-Wall runs by default every 45 minutes. If the computer is suspended or shut down the cron task can't update the wallpaper until the computer is awake and 45 minutes pass. This may lead to situations where the wallpaper stays set on a time earlier in the day meanwhile the computer suspends and wakes up later in the evening with the same wallpaper set. Installing a script in /systemd/system-sleep will trigger the Dynamic-Wall script once on wakeup solving this problem and creating a seamless experience."
        ;;
      * )
        echo -e "\e[00;31mUknown answer provided.\e[00m"
        ;;
    esac
  done
else
  echo -e "\e[00;32m\nSkipping system-sleep files...\e[00m"
  if ! [[ $method = "cron" ]]; then
    echo "Skipped due to systemd installation"
  else
    echo "Skipped due to incompatible system"
  fi
fi

# Post installation

echo -e "\e[00;32m\n[5/6] Creating software links...\e[00m"
echo "Enter password to add dynamicwall to you PATH"
sudo ln -s -f -v "$install_dir/dynamic-wall/dynamicwall" /usr/local/bin/dynamicwall
sudo -k

if [[ -f /bin/systemctl ]] && ! [[ $method = "cron" ]]; then
  echo -e "\e[00;32m\n[6/6] Enabling and starting systemd service...\e[00m"
  systemctl --user enable dynamicwall.service dynamicwall.timer
  systemctl --user start dynamicwall.timer
elif [[ $method = "cron" ]]; then
	echo -e "\e[00;32m\n[6/6] Creating cronjob...\e[00m"
  crontab -u "$usrnm" -l | { cat; echo "*/45 * * * * $install_dir/dynamic-wall/dynamicwall"; } | crontab -u "$usrnm" -
else
  echo -e "\e[00;31mCan't find systemctl directory, skipping...\e[00m"
fi

cp -p "$DIR/README.md" "$install_dir/dynamic-wall/"
cp -p "$DIR/remove" "$install_dir/dynamic-wall/"

echo -e "\e[00;32m\nUpdating configuration and running dynamicwall once\e[00m"
dynamicwall

echo -e "\e[00;32m\nDynamic-Wall v$DW_VERSION is installed. Enjoy!\e[00m"
echo -e "\n\033[0;33m$(dynamicwall -h)\033[0m"
